{
	"info": {
		"_postman_id": "540fc6ef-8e84-4333-931e-22f0da72112d",
		"name": "Testkube-Sanity-Failing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "List tests",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Test is on the list\", function () {",
							"    let jsonData = pm.response.json();",
							"    let contains = false;",
							"    for (let i=0; i<jsonData.length; i++) {",
							"        if (jsonData[i].name == pm.environment.get(\"test_name\")) {",
							"            contains = true;",
							"        }",
							"    }",
							"",
							"    pm.expect(contains).to.be.true",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(\"uri\", pm.environment.get(\"api_uri\"));",
							"console.log(\"test name\", pm.environment.get(\"test_name\"))",
							"console.log(\"test type\", pm.environment.get(\"test_type\"))",
							"console.log(\"exec name\", pm.environment.get(\"execution_name\"))",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_uri}}/v1/tests",
					"host": [
						"{{api_uri}}"
					],
					"path": [
						"v1",
						"tests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create test with invalid body",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(\"uri\", pm.environment.get(\"api_uri\"));",
							"console.log(\"test name\", pm.environment.get(\"test_name\"))",
							"console.log(\"test type\", pm.environment.get(\"test_type\"))",
							"",
							"",
							"function makeid(length) {",
							"    var result           = '';",
							"    var characters       = 'abcdefghijklmnopqrstuvwxyz0123456789';",
							"    var charactersLength = characters.length;",
							"    for ( var i = 0; i < length; i++ ) {",
							"      result += characters.charAt(Math.floor(Math.random() * ",
							" charactersLength));",
							"   }",
							"   return result;",
							"}",
							"",
							"pm.environment.set(\"test_name\", \"postman-test-\"+makeid(6))"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Check if test created successfully\", function () {",
							"    let jsonData = pm.response.json();",
							"    let name = jsonData.metadata.name;",
							"    let testName = pm.environment.get(\"test_name\");",
							"    ",
							"    pm.expect(name).to.eql(testName);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"labels\": {\n        \"toDelete\": \"yes\"\n    },\n    \"content\": {\n        \"type\": \"string\",\n        \"data\": \"{\\r\\n\\t\\\"info\\\": {\\r\\n\\t\\t\\\"_postman_id\\\": \\\"3d9a6be2-bd3e-4cf7-89ca-354103aab4a7\\\",\\r\\n\\t\\t\\\"name\\\": \\\"testkube\\\",\\r\\n\\t\\t\\\"schema\\\": \\\"https:\\/\\/schema.getpostman.com\\/json\\/collection\\/v2.1.0\\/collection.json\\\"\\r\\n\\t},\\r\\n\\t\\\"item\\\": [\\r\\n\\t\\t{\\r\\n\\t\\t\\t\\\"name\\\": \\\"Health\\\",\\r\\n\\t\\t\\t\\\"event\\\": [\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\\"listen\\\": \\\"test\\\",\\r\\n\\t\\t\\t\\t\\t\\\"script\\\": {\\r\\n\\t\\t\\t\\t\\t\\t\\\"exec\\\": [\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"pm.test(\\\\\\\"Status code is 200\\\\\\\", function () {\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"    pm.response.to.have.status(200);\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"});\\\"\\r\\n\\t\\t\\t\\t\\t\\t],\\r\\n\\t\\t\\t\\t\\t\\t\\\"type\\\": \\\"text\\/javascript\\\"\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t],\\r\\n\\t\\t\\t\\\"request\\\": {\\r\\n\\t\\t\\t\\t\\\"method\\\": \\\"GET\\\",\\r\\n\\t\\t\\t\\t\\\"header\\\": [],\\r\\n\\t\\t\\t\\t\\\"url\\\": {\\r\\n\\t\\t\\t\\t\\t\\\"raw\\\": \\\"{{test_api_uri}}\\/health\\\",\\r\\n\\t\\t\\t\\t\\t\\\"host\\\": [\\r\\n\\t\\t\\t\\t\\t\\t\\\"{{test_api_uri}}\\\"\\r\\n\\t\\t\\t\\t\\t],\\r\\n\\t\\t\\t\\t\\t\\\"path\\\": [\\r\\n\\t\\t\\t\\t\\t\\t\\\"health\\\"\\r\\n\\t\\t\\t\\t\\t]\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\t\\\"response\\\": []\\r\\n\\t\\t}\\r\\n\\t]\\r\\n}\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_uri}}/v1/tests",
					"host": [
						"{{api_uri}}"
					],
					"path": [
						"v1",
						"tests"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "test_type",
			"value": "postman/collection",
			"type": "string"
		}
	]
}